generator client {
  provider = "prisma-client-js"
  output   = "../src/app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id                @default(uuid())
  clerkId        String           
  name           String
  email          String           @unique
  role           Role             @default(DELIVERY)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime
  FinanceExpense FinanceExpense[]
  Inventory      Inventory[]
  Order          Order[]
}

model FinanceExpense {
  id          String             @id               @default(uuid())
  createdAt   DateTime           @default(now())
  createdById String
  type        FinanceExpenseType
  description String
  value       Decimal
  productId   String?
  variantId   String?
  quantity    Int?
  User        User               @relation(fields: [createdById], references: [id])
  Product     Product?           @relation(fields: [productId], references: [id])
  Variant     Variant?           @relation(fields: [variantId], references: [id])
}

model Inventory {
  id            String   @id @default(uuid())
  productId     String
  variantId     String
  quantityAdded Int
  costPerUnit   Decimal
  dealer        String
  dateReceived  DateTime
  createdById   String
  createdAt     DateTime @default(now())
  User          User     @relation(fields: [createdById], references: [id])
  Product       Product  @relation(fields: [productId], references: [id])
  Variant       Variant  @relation(fields: [variantId], references: [id])
}

model Order {
  id             String         @id @default(uuid())
  userName       String
  phone          String
  alternatePhone String?
  roll           String?
  hall           Hall
  deliveryDate   DateTime
  amountRecieved Decimal
  discount       Decimal        @default(0)
  additionalInfo String?
  deliveryStatus DeliveryStatus @default(PENDING)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime
  referalId      String
  User           User           @relation(fields: [referalId], references: [id])
  OrderItem      OrderItem[]
}

model OrderItem { 
  id        String  @id @default(uuid())
  orderId   String
  productId String
  variantId String
  quantity  Int
  Order     Order   @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])
  Variant   Variant @relation(fields: [variantId], references: [id])
}

model Product {
  id             String           @id  @default(uuid())
  name           String
  price          Decimal?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  FinanceExpense FinanceExpense[]
  Inventory      Inventory[]
  OrderItem      OrderItem[]
  Variant        Variant[]
}

model Variant {
  id             String           @id @default(uuid())
  name           String
  variantPrice   Decimal
  productId      String
  FinanceExpense FinanceExpense[]
  Inventory      Inventory[]
  OrderItem      OrderItem[]
  Product        Product          @relation(fields: [productId], references: [id])
}

enum Role {
  ADMIN
  SALES
  DELIVERY
  KEEPER
  TREASURER
}

enum DeliveryStatus {
  PENDING
  OUT_FOR_DELIVERY
  NOT_AVAILABLE
  DELIVERED
  CANCELLED
}

enum FinanceExpenseType {
  PURCHASE
  GENERAL
}

enum Hall {
  ABV
  Azad
  BCRoy
  BRH
  Gokhale
  HJB
  JCB
  Nehru
  LBS
  LLR
  MMM
  MS
  MT
  SNVH
  PDFBlock
  Patel
  RK
  RaniLaxmiBai
  RP
  SAM
  SBP1
  SBP2
  SNIG
  VSRC1
  VSRC2
  VidyaSagar
  ZakirHussain
  Radar
}
